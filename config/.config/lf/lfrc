# ==============================================================================
# == CONFIGURACIÓN BÁSICA ======================================================
# ==============================================================================
set shellopts '-eu'
set ifs "\n"
set scrolloff 10
set icons
set period 1
set hiddenfiles ".*:*.aux:*.log:*.bbl:*.bcf:*.blg:*.run.xml"
set cleaner '~/.config/lf/cleaner'
set previewer '~/.config/lf/scope'
set autoquit true

# ==============================================================================
# == COMANDOS PERSONALIZADOS ===================================================
# ==============================================================================

# -- Apertura de archivos --
# Llama a un script externo para manejar la apertura de archivos.
# El '&' inicial ejecuta el comando en segundo plano para no bloquear lf.
cmd open &open $fx

# -- Creación de directorios --
cmd mkdir $mkdir -p "$@"

# -- Extracción de archivos comprimidos --
cmd extract ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "extract?[y/N]"
    read ans
    [ "$ans" = "y" ] && {
        case $fx in
            *.tar.bz2)   tar xjf "$fx"     ;;
            *.tar.gz)    tar xzf "$fx"     ;;
            *.bz2)       bunzip2 "$fx"     ;;
            *.rar)       unrar e "$fx"     ;;
            *.gz)        gunzip "$fx"      ;;
            *.tar)       tar xf "$fx"      ;;
            *.tbz2)      tar xjf "$fx"     ;;
            *.tgz)       tar xzf "$fx"     ;;
            *.zip)       unzip "$fx"       ;;
            *.Z)         uncompress "$fx"  ;;
            *.7z)        7z x "$fx"        ;;
            *.tar.xz)    tar xf "$fx"      ;;
        esac
    }
}}

# -- Borrado de archivos --
cmd delete ${{
    clear; tput cup $(($(tput lines)/3)); tput bold
    set -f
    printf "%s\n\t" "$fx"
    printf "delete?[y/N]"
    read ans
    [ "$ans" = "y" ] && rm -rf -- $fx
}}

# -- Mover/Copiar archivos usando marcadores --
cmd moveto ${{
    set -f
    clear; tput cup $(($(tput lines)/3))
    dest=$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' "${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs" | fzf --layout=reverse --height 40% --prompt 'Move to where? ' | sed 's|~|$HOME|')
    [ -z "$dest" ] && exit
    destpath=$(eval printf '%s' "$dest")
    clear; tput cup $(($(tput lines)/3)); tput bold
    echo "From:"
    echo "$fx" | sed 's/^/   /'
    printf "To:\n   %s\n\n\tmove?[y/N]" "$destpath"
    read -r ans
    [ "$ans" != "y" ] && exit
    mv -iv $fx "$destpath" && notify-send "🚚 File(s) moved." "File(s) moved to $destpath."
}}

cmd copyto ${{
    set -f
    clear; tput cup $(($(tput lines)/3))
    dest=$(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' "${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs" | fzf --layout=reverse --height 40% --prompt 'Copy to where? ' | sed 's|~|$HOME|')
    [ -z "$dest" ] && exit
    destpath=$(eval printf '%s' "$dest")
    clear; tput cup $(($(tput lines)/3)); tput bold
    echo "From:"
    echo "$fx" | sed 's/^/   /'
    printf "To:\n   %s\n\n\tcopy?[y/N]" "$destpath"
    read -r ans
    [ "$ans" != "y" ] && exit
    cp -ivr $fx "$destpath" && notify-send "📋 File(s) copied." "File(s) copied to $destpath."
}}

# -- Renombrado masivo --
cmd bulkrename ${{
    tmpfile_old="$(mktemp)"; tmpfile_new="$(mktemp)"
    [ -n "$fs" ] && fs=$(basename -a $fs) || fs=$(ls)
    echo "$fs" > "$tmpfile_old"; echo "$fs" > "$tmpfile_new"
    $EDITOR "$tmpfile_new"
    [ "$(wc -l < "$tmpfile_old")" -eq "$(wc -l < "$tmpfile_new")" ] || { rm -f "$tmpfile_old" "$tmpfile_new"; exit 1; }
    paste "$tmpfile_old" "$tmpfile_new" | while IFS="$(printf '\t')" read -r src dst; do
        [ "$src" = "$dst" ] || [ -e "$dst" ] || mv -- "$src" "$dst"
    done
    rm -f "$tmpfile_old" "$tmpfile_new"
    lf -remote "send $id unselect"
}}

# -- Búsqueda recursiva con fd y fzf --
cmd find-file $lf -remote "send $id select \"$(fd . --hidden --follow --exclude .git | fzf)\""

# -- Integración con Git --
cmd git-status ${{
    git status -s
    read
}}

# -- Fondo de pantalla --
cmd setbg "$1"

# ==============================================================================
# == MAPEO DE TECLAS (BINDINGS) ================================================
# ==============================================================================

# -- Navegación y Búsqueda --
map <c-f> $lf -remote "send $id select \"$(fzf)\""      # Seleccionar archivo con fzf en dir. actual
map F find-file                                      # Buscar archivo recursivamente con fd y fzf
map J $lf -remote "send $id cd $(sed -e 's/\s*#.*//' -e '/^$/d' -e 's/^\S*\s*//' ${XDG_CONFIG_HOME:-$HOME/.config}/shell/bm-dirs | fzf)" # Saltar a directorio "marcado"
map H cd ~                                           # Ir a HOME
map g top                                            # Ir al inicio de la lista
map <c-r> reload                                     # Recargar directorio
map <c-s> set hidden!                                # Mostrar/Ocultar archivos ocultos
map T $nsxiv -t "$(pwd)"                             # Abrir thumbnails con nsxiv
map <c-l> unselect                                   # Deseleccionar todo

# -- Operaciones con Archivos --
map D delete                                         # Borrar con confirmación
map E extract                                        # Extraer archivo con confirmación
map C copyto                                         # Copiar a un directorio "marcado"
map M moveto                                         # Mover a un directorio "marcado"
map B bulkrename                                     # Renombrado masivo con $EDITOR
map b $setbg $f                                      # Establecer como fondo de pantalla
map <c-n> push :mkdir<space>""<left>                  # Crear un nuevo directorio

# -- Renombrado Inteligente --
map A :rename; cmd-end                               # Renombrar: Cursor al final
map c push A<c-u>                                    # Renombrar: Limpiar nombre actual
map I :rename; cmd-home                              # Renombrar: Cursor al inicio
map i :rename                                        # Renombrar: Antes de la extensión
map a :rename; cmd-right                             # Renombrar: Después de la extensión

# -- Ejecución y Apertura --
map l open                                           # Abrir con el script 'open' (usa 'l' como en ranger)
map <enter> &open                                    # Abrir con el script 'open'
map x $$f                                            # Ejecutar archivo seleccionado
map X !$f                                            # Ejecutar en una subshell

# -- Portapapeles (Clipboard) --
map U $printf "%s" "$fx" | xclip -selection clipboard  # Copiar ruta completa
map u $printf "%s" "$fx" | sed 's/.*\///' | xclip -selection clipboard # Copiar solo el nombre del archivo
map . $printf "%s" "$fx" | sed -E 's/^.+\[/https:\/\/youtube.com\/watch?v=/' | sed -E 's/\]\..+//' | xclip -selection clipboard # Copiar URL de YouTube
map > $printf "%s" "$fx" | sed -E 's/^.+\[/https:\/\/piped.video\/watch?v=/' | sed -E 's/\]\..+//' | xclip -selection clipboard # Copiar URL de Piped

# -- Integración con otros programas --
map <c-e> down
map <c-y> up
map V push :!nvim<space>                             # Abrir nvim
map W $setsid -f $TERMINAL >/dev/null 2>&1           # Abrir nueva terminal
map 's' git-status                                   # Mostrar estado de Git

# ==============================================================================
# == ATAJOS PERSONALIZADOS =====================================================
# ==============================================================================
source "~/.config/lf/shortcutrc"
